# 1. Реализовать функцию, принимающую два числа (позиционные аргументы)
# и выполняющую их деление. Числа запрашивать у пользователя,
# предусмотреть обработку ситуации деления на ноль.
def func_1(arg_1, arg_2):
    if arg_2 == 0:
        print("деление на 0 запрещено")
    else:
        print(arg_1, " / ", arg_2, " = ", arg_1 / arg_2)


# 2. Реализовать функцию, принимающую несколько параметров,
# описывающих данные пользователя: имя, фамилия, год рождения,
# город проживания, email, телефон. Функция должна принимать параметры как именованные аргументы.
# Реализовать вывод данных о пользователе одной строкой.
def func_2(name, surname, birthdate, city, email, telephone_number):
    print("user info: name {}, surname {}, birthdate {}, city {}, email {}, telephone_number {}".format(name, surname,
                                                                                                        birthdate, city,
                                                                                                        email,
                                                                                                        telephone_number))


func_2(
    name="John",
    surname="Galt",
    birthdate="01/01/1990",
    city="Boston",
    email="jb@gmail.com",
    telephone_number="999-777-77-77"
)

# 3. Реализовать функцию my_func(), которая принимает три позиционных аргумента, и
# возвращает сумму наибольших двух аргументов.

def my_func(a, b, c):
    mas = [a, b, c]
    max_1 = max(mas)
    mas.remove(max_1)
    max_2 = max(mas)
    return max_1 + max_2

res = my_func(a = 2, b = 4, c = 1)
print("sum is {}".format(res))

# 4. Программа принимает действительное положительное число x и целое отрицательное число y.
# Необходимо выполнить возведение числа x в степень y. Задание необходимо реализовать в виде
# функции my_func(x, y). При решении задания необходимо обойтись без встроенной функции возведения числа в степень.
# ** Подсказка:** попробуйте решить задачу двумя способами. Первый — возведение в степень с помощью оператора **.
# Второй — более сложная реализация без оператора **, предусматривающая использование цикла.

def my_func(x, y):
    return 1 / x ** abs(y)
res = my_func(2, -2)
print(res)

# 5. Программа запрашивает у пользователя строку чисел, разделенных пробелом.
# При нажатии Enter должна выводиться сумма чисел. Пользователь может продолжить ввод чисел,
# разделенных пробелом и снова нажать Enter. Сумма вновь введенных чисел будет добавляться к
# уже подсчитанной сумме. Но если вместо числа вводится специальный символ, выполнение программы завершается.
# Если специальный символ введен после нескольких чисел, то вначале нужно добавить сумму этих чисел к полученной
# ранее сумме и после этого завершить программу.

symbol = input("enter special symbol to exit: ")
result = 0

while True:
    new_line = input("enter line: ")
    values = new_line.split(" ")
    for v in values:
        if v == symbol:
            print("result is ", result)
            break
        else:
            try:
                result += int(v)
            except:
                print("invalid value in line")
                exit(-1)
    print("result is ", result)


# 6. Реализовать функцию int_func(), принимающую слово из маленьких латинских букв и возвращающую
# его же, но с прописной первой буквой. Например, print(int_func(‘text’)) -> Text.
# Продолжить работу над заданием. В программу должна попадать строка из слов, разделенных пробелом.
# Каждое слово состоит из латинских букв в нижнем регистре. Сделать вывод исходной строки,
# но каждое слово должно начинаться с заглавной буквы. Необходимо использовать написанную ранее функцию int_func().

def int_func(word):
    try:
        if len(word) != 0:
            word = list(str(word))
            word[0] = word[0].upper()
            word = "".join(word)
        return word
    except:
        print("invalid format")
        exit(-1)

# ww = int_func("test")
# print(ww)

line = input("enter ypur line")
res_line = ""
for l in line.split(" "):
    l = int_func(l) + " "
    res_line += l
print(res_line)